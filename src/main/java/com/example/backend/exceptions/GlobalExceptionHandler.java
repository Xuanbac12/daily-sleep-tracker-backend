package com.example.backend.exceptions;

import org.springframework.http.HttpStatus;
import org.springframework.http.converter.HttpMessageNotReadableException;
import org.springframework.web.bind.annotation.*;

import java.util.Map;

@RestControllerAdvice
public class GlobalExceptionHandler {

    // ‚úÖ B·∫Øt l·ªói ƒë·ªãnh d·∫°ng JSON sai (nh∆∞ ng√†y sai format)
    @ExceptionHandler(HttpMessageNotReadableException.class)
    @ResponseStatus(HttpStatus.BAD_REQUEST)
    public Map<String, String> handleInvalidJson(HttpMessageNotReadableException ex) {
        System.out.println("üî• JSON Parse Error: " + ex.getMostSpecificCause().getMessage());
        return Map.of("error", "D·ªØ li·ªáu kh√¥ng h·ª£p l·ªá: " + ex.getMostSpecificCause().getMessage());
    }

    // ‚úÖ B·∫Øt l·ªói logic t·ª´ Service (tr√πng ng√†y, ng√†y t∆∞∆°ng lai, v.v.)
    @ExceptionHandler(IllegalArgumentException.class)
    @ResponseStatus(HttpStatus.BAD_REQUEST)
    public Map<String, String> handleIllegalArgument(IllegalArgumentException ex) {
        return Map.of("error", ex.getMessage());
    }

    // ‚úÖ B·∫Øt m·ªçi l·ªói c√≤n l·∫°i ƒë·ªÉ kh√¥ng tr·∫£ v·ªÅ 403 nh·∫ßm
    @ExceptionHandler(Exception.class)
    @ResponseStatus(HttpStatus.INTERNAL_SERVER_ERROR)
    public Map<String, String> handleGeneral(Exception ex) {
        System.out.println("üî• L·ªói kh√¥ng x√°c ƒë·ªãnh: " + ex.getClass() + " - " + ex.getMessage());
        return Map.of("error", "L·ªói h·ªá th·ªëng: " + ex.getMessage());
    }
}
